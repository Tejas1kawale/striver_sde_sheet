/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode
    {
    public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T dat)
        {
            this->data = dat;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
#include<bits/stdtr1c++.h>
vector<int> getTopView(TreeNode<int> *root)
{
            queue<pair<TreeNode<int> *,int>> q;
        q.push({root,0});

        map<int,int> mp;

        while(!q.empty())   
        {
            TreeNode<int> *temp=q.front().first;
            int col=q.front().second;

             if(mp.find(col)==mp.end())
             {
                 mp[col]=temp->data;
             }
             if(temp->left)
             {
                 q.push({temp->left,col-1});
             }
             if(temp->right)
             {
                 q.push({temp->right,col+1});
             }
             q.pop();
        }
        vector<int> ans;
        for(auto it:mp)
        {
            ans.push_back(it.second);
        }
        return ans;
}
